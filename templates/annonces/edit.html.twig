{% extends 'base.html.twig' %}

{% block title %}Modifier l'annonce{% endblock %}

{% block body %}

    <div class="container-fluid">
        <div class="row pt-3">
            <div class="col-sm-8 offset-sm-2">
                <div id="formulaire_annonce" class="card shadow">
                    <div class="card-header">
                        <h2 class="h3 mb-0 d-inline">{{ categorie.libelle }}</h2>
                        <a href="{{ path('annonces_index') }}" class="float-right btn btn-primary">Retour</a>
                    </div>
                    <div class="card-body">
                        {{ include('annonces/_form.html.twig') }}
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function addTagForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            //console.log($collectionHolder);
            var prototype = $collectionHolder.data('prototype');
            
            // get the new index
            var index = $collectionHolder.data('index');
            
            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);
            
            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);
            
            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);
            
            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<div class="col mb-3"></div>').append(newForm);
            $newLinkLi.prepend($newFormLi);

            // add a delete link to the new form
            addTagFormDeleteLink($newFormLi);
        }
        
        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormButton = $('<button type="button" class="btn btn-danger btn-block btn-sm rounded-0"><i class="fa fa-trash text-white"></i></button>');
            $tagFormLi.find('.suppression').append($removeFormButton);
            
            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
        
        $(document).ready(function () 
        {
            var $divAnnonces = $('#form_categorie');
            
            // When sport gets selected ...
            $('body').on('submit', "[name='form']", function(e){
                console.log("2e");
            });

            $(document).on('change', '#form_categorie', function() {
                var $form = $(this).closest("[name='form']");
                // ... retrieve the corresponding form.
                var $form = $(this).closest('form');
                var $annonces = $('#form_categorie :selected');
                // Simulate form data, but only include the selected sport value.
                var data = {};
                // Submit data via AJAX to the form's action path.
                $.ajax({
                    url : $form.attr('action'),
                    type: $form.attr('method'),
                    data : {id: $annonces.val()},
                    success: function(html) {
                        
                        //$form.remove();
                        // Replace current position field ...
                        
                        $form.replaceWith(html["formHtml"]);
                        //$divAnnonces.append(html["formHtml"]);
                        // Position field now displays the appropriate positions.
                    }
                });
            });
            
            $(document).on('change', '.file-upload', function(e) 
            {
                var input = this;
                var img   = $(input).prev();

                var reader = new FileReader();
                reader.onload = function(e) 
                {
                    img.attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]); // convert to base64 string
            });

            // Get the ul that holds the collection of tags
            var $collectionHolder;
            $collectionHolder = $('div.photo');
            
            // setup an "add a tag" link
            var $addTagButton = $('<button type="button" class="btn btn-block btn-info mb-2 add_tag_link">Ajouter une image</button>');
            var $newLinkLi = $collectionHolder.before($addTagButton);
        

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);
            

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addTagButton.on('click', function(e)
            {
                var maximum = parseInt( $('#photoMax').val() );
                if( $('.photo-template').length < maximum )
                {
                    // add a new tag form (see next code block)
                    addTagForm($collectionHolder, $newLinkLi);
                }
                else
                {
                    $('#photo-overflow').modal({show: true});
                }
            });

            $('.detelePhoto').on('click', function () {
                idPhoto = $(this).attr('idPhoto');
                $.ajax({
                    url: "{{ path('photo_delete_ajax') }}",
                    type: 'POST',
                    data: {id : idPhoto},
                    success: function (data) {
                        $('#photo_' + idPhoto).remove();
                    }
                });
            })
        });
    </script>

    <script>
        $(document).ready( function () 
        {
            $(".sous-categorie").change( function (e)
            {
                var selected = $(this).children(':selected').first().text();
                if( selected.trim() == 'Chaussures' )
                {
                    $('.pointure').parent().removeClass('d-none');
                    $('.pointure').attr('required', 'required');
                }
                else
                {
                    $('.pointure').val(null);
                    $('.pointure').parent().addClass('d-none');
                    $('.pointure').removeAttr('required');
                }
            })
            $(".sous-categorie").trigger("change");
        })
    </script>
{% endblock %}